name: Options Scalper Trading Bot

on:
  schedule:
    # Run at 9:25 AM ET every weekday (1:25 PM UTC during EDT, 2:25 PM UTC during EST)
    - cron: '25 13 * * 1-5'  # Adjust based on daylight savings
    - cron: '25 14 * * 1-5'  # Alternative schedule for EST
  workflow_dispatch:  # Allow manual trigger

jobs:
  trading-session:
    runs-on: ubuntu-latest
    timeout-minutes: 480  # 8 hour timeout for full trading day
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
    
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Configure environment
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        ALPACA_API_KEY: ${{ secrets.ALPACA_API_KEY }}
        ALPACA_API_SECRET: ${{ secrets.ALPACA_API_SECRET }}
        ALPACA_BASE_URL: ${{ secrets.ALPACA_BASE_URL }}
        EMAIL_USERNAME: ${{ secrets.EMAIL_USERNAME }}
        EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
        WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
      run: |
        echo "DATABASE_URL=$DATABASE_URL" > .env
        echo "ALPACA_API_KEY=$ALPACA_API_KEY" >> .env
        echo "ALPACA_API_SECRET=$ALPACA_API_SECRET" >> .env
        echo "ALPACA_BASE_URL=$ALPACA_BASE_URL" >> .env
        echo "EMAIL_USERNAME=$EMAIL_USERNAME" >> .env
        echo "EMAIL_PASSWORD=$EMAIL_PASSWORD" >> .env
        echo "WEBHOOK_URL=$WEBHOOK_URL" >> .env
        echo "TRADING_MODE=paper" >> .env
    
    - name: Run trading bot
      run: |
        echo "Starting trading bot with Alpaca broker..."
        mkdir -p logs
        python main.py --mode paper --broker alpaca
      env:
        PYTHONUNBUFFERED: 1
    
    - name: Upload logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: trading-logs-${{ github.run_id }}
        path: logs/
        retention-days: 30
    
    - name: Send completion notification
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "Trading session completed successfully"
        else
          echo "Trading session failed or was cancelled"
        fi